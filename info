# 🔧 SETUP: Define Cloud SDK installation path
$gcloudPath = "C:\swtools\google-cloud-sdk-356.0.0-windows"

# ✅ Step 1: Set environment variable GCLOUD_HOME
[Environment]::SetEnvironmentVariable("GCLOUD_HOME", $gcloudPath, "User")
Write-Host "`n✔️ GCLOUD_HOME set to $gcloudPath"

# ✅ Step 2: Add GCLOUD_HOME\bin to PATH (if not already present)
$currentPath = [Environment]::GetEnvironmentVariable("Path", "User")
$newEntry = "$gcloudPath\bin"
if ($currentPath -notlike "*$newEntry*") {
    [Environment]::SetEnvironmentVariable("Path", "$currentPath;$newEntry", "User")
    Write-Host "✔️ Added $newEntry to PATH"
} else {
    Write-Host "✔️ PATH already contains GCLOUD_HOME\bin"
}

# ✅ Step 3: Set proxy configuration
& "$gcloudPath\bin\gcloud.cmd" config set proxy/type http_no_tunnel
& "$gcloudPath\bin\gcloud.cmd" config set proxy/address googleapis-prod.gcp.cloud.uk.<<ORG_NAME_LOWER>>  # Replace with actual proxy
& "$gcloudPath\bin\gcloud.cmd" config set proxy/port 3128

Write-Host "`n✔️ Proxy configuration set for gcloud"

# ✅ Step 4: Confirm gcloud configuration
Write-Host "`n📋 Current gcloud configuration:"
& "$gcloudPath\bin\gcloud.cmd" config list

# ✅ Step 5: Begin gcloud authentication
Write-Host "`n🌐 Launching browser for gcloud CLI login..."
& "$gcloudPath\bin\gcloud.cmd" auth login

Write-Host "`n🌐 Launching browser for application-default login (for Python SDK)..."
& "$gcloudPath\bin\gcloud.cmd" auth application-default login

Write-Host "`n✅ All steps executed. You may now use GCP via CLI or EXE-based testing tools."
